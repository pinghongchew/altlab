{"version":3,"sources":["logo.svg","image/burger-gold.jpeg","App.js","reportWebVitals.js","index.js"],"names":["App","style","backgroundImage","padding","Navbar","Container","Brand","href","Nav","className","Link","fluid","Row","Col","xs","md","Image","src","goldenBurger","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0a9652d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/burger-gold.b1c08ac9.jpeg\";","import logo from './logo.svg';\nimport './App.css';\nimport { Container, Nav, Button, Row, Col, Image, Navbar } from 'react-bootstrap';\nimport goldenBurger from './image/burger-gold.jpeg';\n\nfunction App() {\n  return (\n    <div>\n      <div style={{ backgroundImage: \"linear-gradient(to top right, #5ae7f2, #a6f9ff)\", padding: \"1rem\" }}>\n        <Navbar>\n          <Container>\n            <Navbar.Brand href=\"#home\">Logo</Navbar.Brand>\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"#home\">Features</Nav.Link>\n              <Nav.Link href=\"#features\">Traits</Nav.Link>\n              <Nav.Link href=\"#pricing\">Roadmap</Nav.Link>\n              <Nav.Link href=\"#pricing\">Team</Nav.Link>\n              <Nav.Link href=\"#pricing\">Lore</Nav.Link>\n            </Nav>\n          </Container>\n        </Navbar>\n        <Container fluid=\"lg\">\n          <Row className=\"justify-content-md-center\">\n            <Col xs={12} md={5} style={{ padding: \"1.75rem\" }}>\n              <h2>Welcome to Metallic Burger</h2>\n              <h3>10000 randomly generated 3D characters aping around the Ethereum blockchain as ERC-721 tokens and hosted on IPFS.</h3>\n              <p>The collection drops on 2021. The price of each Ape will be 0.02 ETH.</p>\n            </Col>\n            <Col xs={12} md={5} style={{ padding: \"1.75rem\" }}>\n              <Image fluid src={goldenBurger}></Image>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n      {/* SECTION 2 */}\n      <div style={{ backgroundImage: \"linear-gradient(to top right, #75ff83, #d6ffda)\", padding: \"1rem\" }}>\n        <Container fluid=\"lg\">\n          <Row className=\"justify-content-md-center\">\n            <Col xs={12} md={5} style={{ padding: \"1.75rem\" }}>\n              <Image fluid src={goldenBurger}></Image>\n            </Col>\n            <Col xs={12} md={5} style={{ padding: \"1.75rem\" }}>\n              <h2>Perks of Ownership</h2>\n              <h3>Mint Pass</h3>\n              <p>Chibi Apes will act as your Mint Pass. Each additional collection that Chibi Labs brings to market grants you future access to our pre-mint.</p>\n              <h3>Commercial Rights</h3>\n              <p>You will own the intellectual property and commercial rights of your Chibi Apes. You can build derivatives from your Apes and own any potential monetization.</p>\n              <h3>Avatar & Head Shot</h3>\n              <p>You can easily download any Chibi's avatar to use as your profile picture. Raise Your PFP Game!</p>\n              <h3>3D Files</h3>\n              <p>Get your Chibi's GLB or OBJ files. You can use it in metaverses like Decentraland. STLs for 3D printing are coming soon!</p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n      {/* SECTION 3 */}\n      <div style={{ backgroundImage: \"linear-gradient(to top right, #a7a1ff, #cfccff)\", padding: \"1rem\" }}>\n        <Container fluid=\"lg\">\n          <Row className=\"justify-content-md-center\">\n            <Col xs={10}>\n              <h2>How rare is my Chibi Ape?</h2>\n              <p>Every character is created by a random algorithm which ensures that each character is unique and differentiated from the others. Some Apes possess very rare traits that will set themselves apart from the rest of the bunch. We will be supported by the different rarity tools post drop.</p>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            <Col xs={12} md={5} style={{ padding: \"1.75rem\" }}>\n              Testing\n            </Col>\n            <Col xs={12} md={5} style={{ padding: \"1.75rem\" }}>\n              <Image fluid src={goldenBurger}></Image>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n      {/* SECTION 4 */}\n      <div style={{ backgroundImage: \"linear-gradient(to top right, #ff7df6, #ffb5fa)\", padding: \"1rem\" }}>\n        <Container fluid=\"lg\">\n          <Row className=\"justify-content-md-center\">\n            <Col xs={10}>\n              <h2>Roadmap</h2>\n              <p>We have lots of future ideas that will help facilitate a vibrant community of Chibi Apes. Here are a few rewards during the launch.</p>\n            </Col>\n          </Row>\n          <Container style={{ padding: \"1rem 10rem 1rem 10rem\" }}>\n            <Row>\n              <Col xs={3}>\n                20 %\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={3} className=\"ms-auto\">\n                40 %\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={3}>\n                50 %\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={3} className=\"ms-auto\">\n                80 %\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={3}>\n                100 %\n              </Col>\n            </Row>\n          </Container>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}