{"version":3,"sources":["logo.svg","image/burger-gold.jpeg","App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","window","ethereum","console","log","useState","address","setAddress","connectWallet","a","request","method","accounts","class","style","backgroundImage","height","onClick","src","autoPlay","loop","muted","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Helmet","document","getElementById"],"mappings":"gQAAe,I,MCAA,I,MC8GAA,MAzGf,WAEEC,qBAAU,WACuB,qBAApBC,OAAOC,SAChBC,QAAQC,IAAI,0BAEZD,QAAQC,IAAI,+BAIhB,MAA8BC,mBAAS,kBAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAkBMC,EAAa,uCAAG,4BAAAC,EAAA,sEACGR,OAAOC,SAASQ,QAAQ,CAAEC,OAAQ,wBADrC,OACdC,EADc,OAEpBT,QAAQC,IAAIQ,EAAS,IACrBL,EAAWK,EAAS,IAHA,2CAAH,qDAMnB,OACE,qCACE,0BAASC,MAAM,kCAAkCC,MAxBnC,CAChBC,gBAAiB,sEAEjBC,OAAQ,SAqBN,UACE,qBAAKH,MAAM,mCAAX,SACE,wBAAQA,MAAM,gEAAgEI,QAAST,EAAvF,SAAuGF,MAEzG,qBAAKO,MAAM,2BAAX,SACE,sBAAKA,MAAM,oEAAX,UACE,qBAAKA,MAAM,4BAAX,SACE,oBAAIA,MAAM,WAAV,qCAEF,qBAAKA,MAAM,kBAAX,SACE,oBAAIA,MAAM,WAAV,iIAEF,qBAAKA,MAAM,kBAAX,SACE,wBAAQA,MAAM,2CAAd,oBAEF,qBAAKA,MAAM,8CAAX,SACE,uBAAOA,MAAM,WAAWK,IAAI,gDAAgDC,UAAQ,EAACC,MAAI,EAACC,OAAK,cAKvG,yBAASP,MAvCO,CAClBQ,gBAAiB,kBACjBN,OAAQ,SAqCN,SACE,sBAAKH,MAAM,sCAAX,UACE,oBAAIA,MAAM,sBAAV,oCACA,sBAAKA,MAAM,iDAAX,UACE,qBAAKA,MAAM,mCAAX,gDAGA,qBAAKA,MAAM,qDAAX,gDAGA,qBAAKA,MAAM,qDAAX,gDAGA,qBAAKA,MAAM,qDAAX,wDAMN,yBAASC,MArDK,CAChBC,gBAAiB,iEACjBC,OAAQ,SAmDN,SACE,sBAAKH,MAAM,sCAAX,UACE,oBAAIA,MAAM,sBAAV,kBACA,oBAAIA,MAAM,0BAAV,yUACA,sBAAKA,MAAM,iDAAX,UACE,qBAAKA,MAAM,gEAAX,mBAGA,qBAAKA,MAAM,kFAAX,oBAGA,qBAAKA,MAAM,kFAAX,0BAGA,qBAAKA,MAAM,kFAAX,+BAMN,kCACE,qBAAKA,MAAM,yEAAX,sCC1FOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACC,EAAA,EAAD,UACE,iDAEF,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.5dae0d44.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/burger-gold.b1c08ac9.jpeg\";","import logo from './logo.svg';\nimport './App.css';\nimport goldenBurger from './image/burger-gold.jpeg';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  useEffect(() => {\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('MetaMask is installed!');\n    } else {\n      console.log('MetaMask is not install!');\n    }\n  })\n\n  const [address, setAddress] = useState(\"Connect Wallet\");\n\n  const styleMain = {\n    backgroundImage: \"url(https://myburgerlab.com/static/img/home/img_hero_3_desktop.jpg)\",\n    // backgroundPosition: \"left -200px bottom 10px\",\n    height: \"650px\"\n  }\n\n  const styleRarity = {\n    backgroundColor: \"rgb(29, 29, 29)\",\n    height: \"650px\"\n  }\n\n  const styleTeam = {\n    backgroundImage: \"linear-gradient(to top right, rgb(53, 53, 53), rgb(65, 40, 40)\",\n    height: \"650px\"\n  }\n\n  const connectWallet = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    console.log(accounts[0]);\n    setAddress(accounts[0]);\n  }\n\n  return (\n    <>\n      <section class=\"bg-center bg-no-repeat bg-cover\" style={styleMain}>\n        <div class=\"flex flex-row-reverse text-white\">\n          <button class=\"border rounded-sm px-4 py-2 inline-block place-self-right m-2\" onClick={connectWallet}>{address}</button>\n        </div>\n        <div class=\"container mx-auto h-full\">\n          <div class=\"text-white grid grid-rows-3 grid-cols-2 grid-flow-col gap-4 py-16\">\n            <div class=\"row-span-1 col-span-1 m-8\">\n              <h1 class=\"text-6xl\">Welcome to ALT Burger</h1>\n            </div>\n            <div class=\"row-span-1 mx-8\">\n              <h2 class=\"text-2xl\">10000 randomly generated 3D characters aping around the Ethereum blockchain as ERC-721 tokens and hosted on IPFS.</h2>\n            </div>\n            <div class=\"row-span-1 mx-8\">\n              <button class=\"border rounded-lg inline-block px-8 py-2\">Mint</button>\n            </div>\n            <div class=\"place-self-center row-span-3 col-span-1 m-8\">\n              <video class=\"max-w-xs\" src=\"https://chibiapes.com/assets/videos/video.mp4\" autoPlay loop muted></video>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section style={styleRarity}>\n        <div class=\"text-white container mx-auto h-full\">\n          <h2 class=\"py-16 text-3xl mx-8\">Your ALT Burger Rarity</h2>\n          <div class=\"grid grid-flow-row grid-cols-4 gap-4 mx-8 h-96\">\n            <div class=\"border fade-in-mode-up opacity-0\">\n              FRESHLY BAKED BAMBOO CHARCOAL BUNS\n            </div>\n            <div class=\"border fade-in-mode-up animation-delay-1 opacity-0\">\n              FRESHLY BAKED BAMBOO CHARCOAL BUNS\n            </div>\n            <div class=\"border fade-in-mode-up animation-delay-2 opacity-0\">\n              FRESHLY BAKED BAMBOO CHARCOAL BUNS\n            </div>\n            <div class=\"border fade-in-mode-up animation-delay-3 opacity-0\">\n              FRESHLY BAKED BAMBOO CHARCOAL BUNS\n            </div>\n          </div>\n        </div>\n      </section>\n      <section style={styleTeam}>\n        <div class=\"text-white container mx-auto h-full\">\n          <h2 class=\"pt-16 text-3xl mx-8\">Team</h2>\n          <h3 class=\"pb-12 pt-4 text-md mx-8\">ALT Labs is home to futuristic, moody, and cool 3D characters. We love anime and we love the 3D world. Our characters bring both worlds together. We live in a culture of collaboration and community. As we grow, we want to grow our community members, which are made up of creatives, technicians, and NFT enthusiasts.</h3>\n          <div class=\"grid grid-flow-row grid-cols-4 gap-4 mx-8 h-64\">\n            <div class=\"border rounded-lg fade-in-mode-up opacity-0 text-center pt-28\">\n              J.A.D\n            </div>\n            <div class=\"border rounded-lg fade-in-mode-up animation-delay-1 opacity-0 text-center pt-28\">\n              Cirkus\n            </div>\n            <div class=\"border rounded-lg fade-in-mode-up animation-delay-2 opacity-0 text-center pt-28\">\n              TacticalTofu\n            </div>\n            <div class=\"border rounded-lg fade-in-mode-up animation-delay-3 opacity-0 text-center pt-28\">\n              JunnnnWei\n            </div>\n          </div>\n        </div>\n      </section>\n      <section>\n        <div class=\"text-center py-8 bg-gradient-to-r from-gray-900 to-gray-800 text-white\">\n          Â© 2021 ALT Labs\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Helmet } from 'react-helmet'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>ALT Burger</title>\n    </Helmet>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}